{"jobID": "2755009331", "jobLocation": "San_Jose_CA", "jobTitle": "Software Engineering Intern", "companyRating": "3.7", "companyInfo": {"Website": "www.xilinx.com", "Headquarters": "San Jose, CA", "Size": "1001 to 5000 employees", "Founded": " 1984", "Type": " Company - Public (XLNX) ", "Industry": " Information Technology", "Revenue": " $2 to $5 billion (USD) per year", "Competitors": " Qualcomm, Intel Corporation, AMD"}, "estimatedSalary": "95000", "jobDescription": "DescriptionXilinx is the leading provider of All Programmable FPGAs, SoCs, MPSoCs and 3DICs. Xilinx's all-programmable devices are designed into  tens of thousands of products that improve the quality of the everyday lives of billions of people worldwide. For over 30 years, Xilinx  has been behind some of the greatest advancements in technology and science - from the industry's first fabless semiconductor model  to the NASA Curiosity Mars Rover, to today's autonomous vehicles and hyperscale data centers. Xilinx uniquely enables applications  that are both software-defined, yet hardware optimized - enabling smart, connected and differentiated applications across  technology's biggest megatrends, including Machine Learning, 5G Wireless, Embedded Vision, Industrial IoT and Cloud Computing and more.SDAccel is the next generation software programming environment to enable application developers with little or no FPGA expertise to use high level programming languages, such as OpenCL, C and C++, to leverage the power of programmable hardware for application acceleration.  This position offers the opportunity to design and implementation of significant parts of SDAccel OpenCL compiler. You will get a chance to tackle many interesting and challenging problems working on compiler for cutting-edge FPGA hardware.BS in CS/CE/EE with 2+ years or MS of compiler development experienceStrong C++ programmingFamiliarity with compiler intermediate representation design, front-end/middle-end/backend partitionFamiliarity with Loop transformation and/or vectorization,Familiarity with code generation from generic IR to target specific IR (e.g. machine code)Familiarity with memory dependency analysisFamiliarity with building cost model at the compiler middle-end Desired skills:\u2022 Knowledge of LLVM/Clang and open source development  \u2022 Knowledge of computer architecture, especially memory subsystem  \u2022 Experience with OpenCL or CUDA is a plus  \u2022 Experience with Clang AST matcher and Clang tooling is a plus"}